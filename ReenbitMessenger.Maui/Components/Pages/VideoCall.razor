@page "/videocall"

@inject ILocalStorageService localStorage
@inject NavigationManager navManager
@inject VideoCallHubService callService
@inject IJSRuntime Js

<h3>Video call</h3>

<p id="user-id"></p>
<MudTextField id="call-id" @bind-Value="@peerId" Label="Peer Id"
              Variant="Variant.Filled" Class="limited"></MudTextField>
<MudButton id="call-btn" Variant="Variant.Outlined" Color="Color.Primary">Call</MudButton>
<MudDivider />
<MudButton id="leave-btn" Variant="Variant.Outlined" Color="Color.Primary">End call</MudButton>

<div id="video-grid" style="display: flex; flex-wrap: wrap; gap: 10px">
</div>

@code {
    private string peerId { get; set; } = string.Empty;

    private IJSObjectReference? _module;

    protected override async Task OnInitializedAsync()
    {
        _module = await Js.InvokeAsync<IJSObjectReference>("import", "./Components/Pages/VideoCall.razor.js");
        navManager.LocationChanged += OnLocationChanged;
        await base.OnInitializedAsync();
    }

    private void OnLocationChanged(object sender, LocationChangedEventArgs e)
    {
        _module.InvokeVoidAsync("leave");
    }

    public async ValueTask DisposeAsync()
    {
        await _module.DisposeAsync();
        navManager.LocationChanged -= OnLocationChanged;
    }
}

@page "/userprofile"

@inject UserProfileService userProfileService
@using System.Linq.Expressions

<style>
    .limited {
        max-width: 200px
    }
</style>

<h3>Your profile</h3>

<MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="UpdateUserProfile">Update user info</MudButton>

@if (userInfoModel is null)
{
    <p>Loading...</p>
}
else
{
    <MudTextField @bind-Value="userInfoModel.Username" Label="Username"
                  Variant="Variant.Filled" Class="limited"></MudTextField>

    <MudTextField @bind-Value="userInfoModel.Email" Label="Email"
                  Variant="Variant.Filled" Class="limited"></MudTextField>

    <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="EditUserProfile">Edit user info</MudButton>
}

@code {
    private class UserInfo {
        public string Username { get; set; } = string.Empty;
        public string Email { get; set; } = string.Empty;
    }

    private UserInfo userInfoModel = new UserInfo();

    protected override async Task OnInitializedAsync()
    {
        await userProfileService.Initialize();

        await UpdateUserProfile();
    }

    private async Task UpdateUserProfile()
    {
        var user = await userProfileService.GetUserProfileAsync();

        if (user is null)
        {
            return;
        }

        userInfoModel.Username = user.UserName;
        userInfoModel.Email = user.Email;
    }

    private async Task EditUserProfile()
    {
        var user = await userProfileService.EditUserInfoAsync(new EditUserInfoRequest() {
            Username = userInfoModel.Username,
            Email = userInfoModel.Email 
        });

        userInfoModel.Username = user.UserName;
        userInfoModel.Email = user.Email;
    }
}

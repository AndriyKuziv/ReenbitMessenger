@page "/login"

@inject IUserHttpClient httpClient
@inject Blazored.LocalStorage.ILocalStorageService ls
@inject ILogger<Login> logger

<h3>Login</h3>

<EditForm Model="@loginModel" OnValidSubmit="Submit" style="padding: 10px; max-width: 300px">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="email">Email</label>
        <InputText id="email" class="form-control" @bind-Value="loginModel.Email" />
        <ValidationMessage For="@(() => loginModel.Email)" />
    </div>

    <div class="form-group">
        <label for="password">Password</label>
        <InputText id="password" class="form-control" type="password" @bind-Value="loginModel.Password" />
        <ValidationMessage For="@(() => loginModel.Password)" />
    </div>

    <button type="submit" class="btn btn-primary" style="margin-top: 10px">Login</button>
</EditForm>


@code {
    private LoginModel loginModel = new LoginModel();

    private class LoginModel
    {
        [Required(ErrorMessage = "Email is required")]
        [EmailAddress]
        public string Email { get; set; }

        [Required(ErrorMessage = "Password is required")]
        public string Password { get; set; }
    }

    private async Task Submit()
    {
        var token = await httpClient.LogInAsync(loginModel.Email, loginModel.Password);
        await ls.SetItemAsync("jwtToken", token);

        logger.LogWarning(token);
        Console.WriteLine("got em");
    }
}
